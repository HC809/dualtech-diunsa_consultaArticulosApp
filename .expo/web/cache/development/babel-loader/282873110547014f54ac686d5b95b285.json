{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\source\\\\repos\\\\dualtech-diunsa_consultaArticulosApp\\\\src\\\\navigation\\\\AppNavigator.tsx\";\n\nimport \"react-native-gesture-handler\";\nimport React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { ENTRADAS_SCREEN } from \"../constants/screens\";\nimport { ConsultaArticuloScreen } from \"../screens/ConsultaArticuloScreen\";\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\nvar Tab = createBottomTabNavigator();\n\nvar EntradaNavigator = function EntradaNavigator() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    headerMode: \"none\",\n    initialRouteName: ENTRADAS_SCREEN,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }\n  }, React.createElement(Tab.Screen, {\n    name: ENTRADAS_SCREEN,\n    component: ConsultaArticuloScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar AppNavigator = function AppNavigator() {\n  return React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, React.createElement(EntradaNavigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AppNavigator;","map":{"version":3,"sources":["C:/Users/USUARIO/source/repos/dualtech-diunsa_consultaArticulosApp/src/navigation/AppNavigator.tsx"],"names":["React","NavigationContainer","createStackNavigator","createDrawerNavigator","createBottomTabNavigator","ENTRADAS_SCREEN","ConsultaArticuloScreen","Stack","Drawer","Tab","EntradaNavigator","headerShown","AppNavigator"],"mappings":";;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAQA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAEEC,oBAFF,QAGO,yBAHP;AAIA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SACEC,wBADF,QAIO,+BAJP;AAMA,SACEC,eADF;AAMA,SAASC,sBAAT;AAOA,IAAMC,KAAK,GAAGL,oBAAoB,EAAlC;AACA,IAAMM,MAAM,GAAGL,qBAAqB,EAApC;AACA,IAAMM,GAAG,GAAGL,wBAAwB,EAApC;;AAiCA,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SACvB,oBAAC,KAAD,CAAO,SAAP;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,WAAW,EAAE;AADA,KADjB;AAIE,IAAA,UAAU,EAAC,MAJb;AAKE,IAAA,gBAAgB,EAAEN,eALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAEA,eAAlB;AAAmC,IAAA,SAAS,EAAEC,sBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADuB;AAAA,CAAzB;;AA2CA,IAAMM,YAAY,GAAG,SAAfA,YAAe,GAAM;AAKzB,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMD,CAXD;;AAaA,eAAeA,YAAf","sourcesContent":["import \"react-native-gesture-handler\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useWindowDimensions } from \"react-native\";\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n  Icon,\n} from \"@ui-kitten/components\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport {\n  CardStyleInterpolators,\n  createStackNavigator,\n} from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport {\n  createBottomTabNavigator,\n  BottomTabBarOptions,\n  BottomTabBarProps,\n} from \"@react-navigation/bottom-tabs\";\n//Constants\nimport {\n  ENTRADAS_SCREEN,\n  ENTRADAS_PRODUCTOS_SCREEN,\n} from \"../constants/screens\";\nimport { AUTH } from \"../constants/shared\";\n//Screens\nimport { ConsultaArticuloScreen } from \"../screens/ConsultaArticuloScreen\";\n//Drawer Content\n//Store\nimport { RootState } from \"../store/store\";\n//Models\nimport { IAuth } from \"../models/IAuth\";\n\nconst Stack = createStackNavigator();\nconst Drawer = createDrawerNavigator();\nconst Tab = createBottomTabNavigator();\n\n// const EntradaBottomTabBar = (props: BottomTabBarProps<BottomTabBarOptions>) => (\n//   <BottomNavigation\n//     selectedIndex={props.state.index}\n//     onSelect={(index) =>\n//       props.navigation.navigate(props.state.routeNames[index])\n//     }\n//   >\n//     <BottomNavigationTab\n//       title=\"Agregar Producto\"\n//       icon={(p) => <Icon {...p} name=\"plus-circle-outline\" />}\n//     />\n//     <BottomNavigationTab\n//       title=\"Lista Productos\"\n//       icon={(p) => <Icon {...p} name=\"list-outline\" />}\n//     />\n//   </BottomNavigation>\n// );\n\n//#region STACK NAVIGATORS\n// const AuthNavigator = () => (\n//   <Stack.Navigator headerMode=\"none\" initialRouteName={LOGIN_SCREEN}>\n//     <Stack.Screen\n//       name={LOGIN_SCREEN}\n//       component={LoginScreen}\n//       options={{\n//         headerShown: false,\n//       }}\n//     />\n//   </Stack.Navigator>\n// );\n\nconst EntradaNavigator = () => (\n  <Stack.Navigator\n    screenOptions={{\n      headerShown: false,\n    }}\n    headerMode=\"none\"\n    initialRouteName={ENTRADAS_SCREEN}\n  >\n    <Tab.Screen name={ENTRADAS_SCREEN} component={ConsultaArticuloScreen} />\n  </Stack.Navigator>\n);\n\n// const ConfigNavigator = () => (\n//   <Stack.Navigator headerMode=\"none\" initialRouteName={CONFIG_SCREEN}>\n//     <Stack.Screen\n//       name={CONFIG_SCREEN}\n//       component={ConfigScreen}\n//       options={{\n//         headerShown: false,\n//       }}\n//     />\n//   </Stack.Navigator>\n// );\n//#endregion STACK NAVIGATORS\n\n//#region DRAWER NAVIGATOR\n// const MyDrawerNavigator = () => {\n//   const { width } = useWindowDimensions();\n\n//   return (\n//     <Drawer.Navigator\n//       drawerType={width >= 768 ? \"permanent\" : \"front\"}\n//       screenOptions={{ gestureEnabled: true }}\n//       drawerContent={(props) => <DrawerContent {...props} />}\n//     >\n//       {/* <Drawer.Screen name={INICIO_SCREEN} component={HomeNavigator} /> */}\n//       <Drawer.Screen name={ENTRADAS_SCREEN} component={EntradaNavigator} />\n//       {/* <Drawer.Screen name={CONFIG_SCREEN} component={ConfigNavigator} /> */}\n//     </Drawer.Navigator>\n//   );\n// };\n//#endregion DRAWER NAVIGATOR\n\nconst AppNavigator = () => {\n  // const { status: authStatus }: IAuth = useSelector(\n  //   (state: RootState) => state.auth\n  // );\n\n  return (\n    <NavigationContainer>\n      <EntradaNavigator />\n      {/* {authStatus === AUTH ? <MyDrawerNavigator /> : <AuthNavigator />} */}\n    </NavigationContainer>\n  );\n};\n\nexport default AppNavigator;\n"]},"metadata":{},"sourceType":"module"}