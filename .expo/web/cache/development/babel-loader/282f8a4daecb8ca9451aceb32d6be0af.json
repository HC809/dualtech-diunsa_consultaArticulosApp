{"ast":null,"code":"import moment from \"moment\";\nimport \"moment/locale/es\";\nexport var setTimeoutTest = function setTimeoutTest(delay) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, delay);\n  });\n};\nexport function ToNumber(number) {\n  return Number(number.toFixed(2));\n}\nexport var currentDate = function currentDate(fecha) {\n  fecha.setTime(fecha.getTime() - new Date().getTimezoneOffset() * 60 * 1000);\n  return fecha;\n};\nexport var dateNormalFormat = function dateNormalFormat(fecha) {\n  var initDate = moment(fecha);\n  initDate.locale(\"es\");\n  return \"\" + initDate.format(\"L\");\n};\nexport var hourFormat = function hourFormat(fecha) {\n  var initDate = moment(fecha);\n  return \"\" + initDate.format(\"h:mm:ss a\");\n};\nexport var getUtcDate = function getUtcDate(fecha) {\n  return new Date(new Date(fecha).setTime(new Date(fecha).getTime() - new Date().getTimezoneOffset() * 60 * 1000));\n};\nexport var addZeroes = function addZeroes(num) {\n  var dec = num.toString().split(\".\")[1];\n  var len = dec && dec.length > 2 ? dec.length : 2;\n  var result = Number(num).toFixed(len);\n  return \"L \" + result.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n};\nexport var addZeroesWithoutL = function addZeroesWithoutL(num) {\n  var dec = num.toString().split(\".\")[1];\n  var len = dec && dec.length > 2 ? dec.length : 2;\n  var result = Number(num).toFixed(len);\n  return result.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n};","map":{"version":3,"sources":["C:/Users/USUARIO/source/repos/dualtech-diunsa_consultaArticulosApp/src/helpers/functions/shared.ts"],"names":["moment","setTimeoutTest","delay","Promise","resolve","setTimeout","ToNumber","number","Number","toFixed","currentDate","fecha","setTime","getTime","Date","getTimezoneOffset","dateNormalFormat","initDate","locale","format","hourFormat","getUtcDate","addZeroes","num","dec","toString","split","len","length","result","replace","addZeroesWithoutL"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAO,kBAAP;AAGA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAmB;AAC/C,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpCC,IAAAA,UAAU,CAACD,OAAD,EAAUF,KAAV,CAAV;AACD,GAFM,CAAP;AAGD,CAJM;AAOP,OAAO,SAASI,QAAT,CAAkBC,MAAlB,EAAkC;AACvC,SAAOC,MAAM,CAACD,MAAM,CAACE,OAAP,CAAe,CAAf,CAAD,CAAb;AACD;AAGD,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAiB;AAC1CA,EAAAA,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,OAAN,KAAkB,IAAIC,IAAJ,GAAWC,iBAAX,KAAiC,EAAjC,GAAsC,IAAtE;AAEA,SAAOJ,KAAP;AACD,CAJM;AAOP,OAAO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACL,KAAD,EAAiB;AAC/C,MAAIM,QAAQ,GAAGjB,MAAM,CAACW,KAAD,CAArB;AACAM,EAAAA,QAAQ,CAACC,MAAT,CAAgB,IAAhB;AAEA,cAAUD,QAAQ,CAACE,MAAT,CAAgB,GAAhB,CAAV;AACD,CALM;AAQP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACT,KAAD,EAAiB;AACzC,MAAIM,QAAQ,GAAGjB,MAAM,CAACW,KAAD,CAArB;AAEA,cAAUM,QAAQ,CAACE,MAAT,CAAgB,WAAhB,CAAV;AACD,CAJM;AAOP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACV,KAAD,EAAiB;AACzC,SAAO,IAAIG,IAAJ,CACL,IAAIA,IAAJ,CAASH,KAAT,EAAgBC,OAAhB,CACE,IAAIE,IAAJ,CAASH,KAAT,EAAgBE,OAAhB,KAA4B,IAAIC,IAAJ,GAAWC,iBAAX,KAAiC,EAAjC,GAAsC,IADpE,CADK,CAAP;AAKD,CANM;AAQP,OAAO,IAAMO,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAyB;AAChD,MAAMC,GAAG,GAAGD,GAAG,CAACE,QAAJ,GAAeC,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAZ;AACA,MAAMC,GAAG,GAAGH,GAAG,IAAIA,GAAG,CAACI,MAAJ,GAAa,CAApB,GAAwBJ,GAAG,CAACI,MAA5B,GAAqC,CAAjD;AAEA,MAAMC,MAAM,GAAGrB,MAAM,CAACe,GAAD,CAAN,CAAYd,OAAZ,CAAoBkB,GAApB,CAAf;AACA,gBAAYE,MAAM,CAACC,OAAP,CAAe,yBAAf,EAA0C,KAA1C,CAAZ;AACD,CANM;AAQP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACR,GAAD,EAAyB;AACxD,MAAMC,GAAG,GAAGD,GAAG,CAACE,QAAJ,GAAeC,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAZ;AACA,MAAMC,GAAG,GAAGH,GAAG,IAAIA,GAAG,CAACI,MAAJ,GAAa,CAApB,GAAwBJ,GAAG,CAACI,MAA5B,GAAqC,CAAjD;AAEA,MAAMC,MAAM,GAAGrB,MAAM,CAACe,GAAD,CAAN,CAAYd,OAAZ,CAAoBkB,GAApB,CAAf;AACA,SAAOE,MAAM,CAACC,OAAP,CAAe,yBAAf,EAA0C,KAA1C,CAAP;AACD,CANM","sourcesContent":["import moment from \"moment\";\nimport \"moment/locale/es\";\n\n//SetTimeout Load TEST\nexport const setTimeoutTest = (delay: number) => {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, delay);\n  });\n};\n\n//Formato numero con dos decimales\nexport function ToNumber(number: number) {\n  return Number(number.toFixed(2));\n}\n\n//Obtener Fecha Actual\nexport const currentDate = (fecha: Date) => {\n  fecha.setTime(fecha.getTime() - new Date().getTimezoneOffset() * 60 * 1000);\n\n  return fecha;\n};\n\n//Formato Fecha\nexport const dateNormalFormat = (fecha: Date) => {\n  let initDate = moment(fecha);\n  initDate.locale(\"es\");\n\n  return `${initDate.format(\"L\")}`;\n};\n\n//Formato Hora\nexport const hourFormat = (fecha: Date) => {\n  let initDate = moment(fecha);\n\n  return `${initDate.format(\"h:mm:ss a\")}`;\n};\n\n//UTC fecha\nexport const getUtcDate = (fecha: Date) => {\n  return new Date(\n    new Date(fecha).setTime(\n      new Date(fecha).getTime() - new Date().getTimezoneOffset() * 60 * 1000\n    )\n  );\n};\n\nexport const addZeroes = (num: number): string => {\n  const dec = num.toString().split(\".\")[1];\n  const len = dec && dec.length > 2 ? dec.length : 2;\n\n  const result = Number(num).toFixed(len);\n  return `L ${result.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")}`;\n};\n\nexport const addZeroesWithoutL = (num: number): string => {\n  const dec = num.toString().split(\".\")[1];\n  const len = dec && dec.length > 2 ? dec.length : 2;\n\n  const result = Number(num).toFixed(len);\n  return result.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n};\n"]},"metadata":{},"sourceType":"module"}